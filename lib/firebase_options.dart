// File generated by FlutterFire CLI.
// ignore_for_file: type=lint

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
// Imports FirebaseOptions for Firebase configuration.

import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
// Imports utilities to identify the platform and check if running on the web.

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example usage:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  // Class to provide platform-specific Firebase configuration.

  static FirebaseOptions get currentPlatform {
    // Returns the Firebase configuration for the current platform.
    if (kIsWeb) {
      return web; // Configuration for web.
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android; // Configuration for Android.
      case TargetPlatform.iOS:
        return ios; // Configuration for iOS.
      case TargetPlatform.macOS:
        return macos; // Configuration for macOS.
      case TargetPlatform.windows:
        return windows; // Configuration for Windows.
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
        // Throws error if running on Linux and configuration is missing.
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
        // Throws error for unsupported platforms.
    }
  }

  // Firebase configuration for web.
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBUWkvrn9IumnVgTZD72fv1BZogohlQdbs',
    appId: '1:134000251102:web:e3222943f0939a44ee724f',
    messagingSenderId: '134000251102',
    projectId: 'makemeadrink-c19cd',
    authDomain: 'makemeadrink-c19cd.firebaseapp.com',
    storageBucket: 'makemeadrink-c19cd.firebasestorage.app',
    measurementId: 'G-KWRSZR68KL',
  );

  // Firebase configuration for Android.
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyA4PWuC01J3py2IP5704MGGK-YB7HAF-Bk',
    appId: '1:134000251102:android:9c657b613bb45753ee724f',
    messagingSenderId: '134000251102',
    projectId: 'makemeadrink-c19cd',
    storageBucket: 'makemeadrink-c19cd.firebasestorage.app',
  );

  // Firebase configuration for iOS.
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAh46fACPa6K1Ll2zCCfPLuS86r3jAMxis',
    appId: '1:134000251102:ios:79f8afe68260fd3aee724f',
    messagingSenderId: '134000251102',
    projectId: 'makemeadrink-c19cd',
    storageBucket: 'makemeadrink-c19cd.firebasestorage.app',
    iosBundleId: 'com.example.makemeadrink',
  );

  // Firebase configuration for macOS (shares the same config as iOS).
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyAh46fACPa6K1Ll2zCCfPLuS86r3jAMxis',
    appId: '1:134000251102:ios:79f8afe68260fd3aee724f',
    messagingSenderId: '134000251102',
    projectId: 'makemeadrink-c19cd',
    storageBucket: 'makemeadrink-c19cd.firebasestorage.app',
    iosBundleId: 'com.example.makemeadrink',
  );

  // Firebase configuration for Windows.
  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBUWkvrn9IumnVgTZD72fv1BZogohlQdbs',
    appId: '1:134000251102:web:371229a7c52cd005ee724f',
    messagingSenderId: '134000251102',
    projectId: 'makemeadrink-c19cd',
    authDomain: 'makemeadrink-c19cd.firebaseapp.com',
    storageBucket: 'makemeadrink-c19cd.firebasestorage.app',
    measurementId: 'G-ZMN6RS0MHL',
  );
}
